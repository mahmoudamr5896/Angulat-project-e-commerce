{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrdersService {\n  constructor(HttpClient) {\n    this.HttpClient = HttpClient;\n    this.order = [];\n  }\n  getallorder() {\n    return this.HttpClient.get('http://localhost:3000/Orders');\n  }\n  getOrdersByUserIdAndStatusFalse(userId) {\n    return this.HttpClient.get(`http://localhost:3000/Orders?UserIds=${userId}`);\n  }\n  AddtoOrders(prod) {\n    return this.HttpClient.post('http://localhost:3000/Orders', prod);\n  }\n  updateOrderStatus(id) {\n    const updateData = {\n      status: false\n    };\n    return this.HttpClient.patch(`http://localhost:3000/Orders/${id}`, updateData);\n  }\n  removeallbyuserid(id) {\n    return this.HttpClient.delete(`http://localhost:3000/Orders?UserIds=${id}`);\n  }\n  removeall() {\n    return this.HttpClient.delete(`http://localhost:3000/Orders`);\n  }\n  static #_ = this.ɵfac = function OrdersService_Factory(t) {\n    return new (t || OrdersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrdersService,\n    factory: OrdersService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAExBC,YACUC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFpB,UAAK,GAAW,EAAE;EAGd;EAEJC,WAAW;IACT,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAC,8BAA8B,CAAC;EAC5D;EACAC,+BAA+B,CAACC,MAAc;IAC5C,OAAO,IAAI,CAACJ,UAAU,CAACE,GAAG,CAAY,wCAAwCE,MAAM,EAAE,CAAC;EACzF;EAEAC,WAAW,CAACC,IAAY;IACtB,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAC,8BAA8B,EAACD,IAAI,CAAC;EAClE;EACAE,iBAAiB,CAACC,EAAU;IAC1B,MAAMC,UAAU,GAAG;MAAEC,MAAM,EAAE;IAAK,CAAE;IACpC,OAAO,IAAI,CAACX,UAAU,CAACY,KAAK,CAAC,gCAAgCH,EAAE,EAAE,EAAEC,UAAU,CAAC;EAChF;EACAG,iBAAiB,CAACJ,EAAS;IAC1B,OAAQ,IAAI,CAACT,UAAU,CAACc,MAAM,CAAC,wCAAwCL,EAAE,EAAE,CAAC;EAC7E;EACAM,SAAS;IACR,OAAQ,IAAI,CAACf,UAAU,CAACc,MAAM,CAAC,8BAA8B,CAAC;EAC/D;EAAC;qBAzBUhB,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAkB,SAAblB,aAAa;IAAAmB,YAFZ;EAAM","names":["OrdersService","constructor","HttpClient","getallorder","get","getOrdersByUserIdAndStatusFalse","userId","AddtoOrders","prod","post","updateOrderStatus","id","updateData","status","patch","removeallbyuserid","delete","removeall","factory","providedIn"],"sourceRoot":"","sources":["/home/mahmoud/Downloads/app-start/src/app/Services/orders.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Iorders } from '../Models/iorders';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  order:Iorders[]=[]\n  constructor(\n    private HttpClient: HttpClient\n  ) { }\n\n  getallorder(){\n    return this.HttpClient.get('http://localhost:3000/Orders')\n  }\n  getOrdersByUserIdAndStatusFalse(userId: string): Observable<Iorders[]> {\n    return this.HttpClient.get<Iorders[]>(`http://localhost:3000/Orders?UserIds=${userId}`);\n  }\n  \n  AddtoOrders(prod:Iorders){\n    return this.HttpClient.post('http://localhost:3000/Orders',prod)\n  }\n  updateOrderStatus(id: number){\n    const updateData = { status: false };\n    return this.HttpClient.patch(`http://localhost:3000/Orders/${id}`, updateData);\n  }\n  removeallbyuserid(id:string){\n   return  this.HttpClient.delete(`http://localhost:3000/Orders?UserIds=${id}`)\n  }\n  removeall(){\n   return  this.HttpClient.delete(`http://localhost:3000/Orders`)\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}