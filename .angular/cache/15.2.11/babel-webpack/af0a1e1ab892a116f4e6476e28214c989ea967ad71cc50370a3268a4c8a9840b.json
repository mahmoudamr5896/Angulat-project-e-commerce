{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../Services/products.service\";\nimport * as i2 from \"@angular/common\";\nfunction ProductsComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelement(6, \"img\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"div\");\n    i0.ɵɵelement(14, \"input\", 3, 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"td\")(17, \"button\", 5);\n    i0.ɵɵtext(18, \"Detail\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"td\")(20, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function ProductsComponent_tr_21_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const prod_r1 = restoredCtx.$implicit;\n      const _r3 = i0.ɵɵreference(15);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.buyItem(prod_r1.id, _r3.value, prod_r1));\n    });\n    i0.ɵɵtext(21, \"Add to Card\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const prod_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵstyleProp(\"background-color\", prod_r1.quantity == 1 ? \"yellow\" : \"white\");\n    i0.ɵɵclassProp(\"d-none\", (prod_r1 == null ? null : prod_r1.quantity) == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prod_r1 == null ? null : prod_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", prod_r1 == null ? null : prod_r1.imgURL, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 10, prod_r1 == null ? null : prod_r1.price));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(prod_r1 == null ? null : prod_r1.quantity);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"max\", prod_r1 == null ? null : prod_r1.quantity);\n  }\n}\nexport class ProductsComponent {\n  // @Input() ProductOfCategory: any[] = []; // Input property to receive products of the selected category\n  constructor(productservice) {\n    this.productservice = productservice;\n    this.ProductOfCaegory = [];\n    this.totalprice = 0;\n    this.selectId = 0;\n    this.orderedProduct = new EventEmitter();\n    this.countProduct = new EventEmitter();\n    this.Product = productservice.getAllproducts();\n  }\n  ngOnChanges() {\n    // this.FilterProductByCategory()\n    console.log(this.selectId);\n    this.ProductOfCaegory = this.productservice.getProductBycategory(this.selectId);\n  }\n  ngOnInit() {\n    this.ProductOfCaegory = this.productservice.getProductBycategory(this.selectId);\n  }\n  buyItem(id, quantity, item) {\n    const productIndex = this.Product.findIndex(product => product.id === id);\n    if (productIndex !== -1) {\n      if (quantity > 0 && quantity <= this.Product[productIndex].quantity) {\n        // Deduct the selected quantity from the stock\n        this.Product[productIndex].quantity -= quantity;\n        this.totalprice = this.Product[productIndex].price * quantity;\n        this.orderedProduct.emit(item);\n        this.countProduct.emit(quantity);\n        console.log(`Item with ID ${id} and quantity ${quantity} has been purchased.`);\n      } else {\n        console.log(`Invalid quantity for item with ID ${id}.`);\n      }\n    } else {\n      console.log(`Item with ID ${id} not found.`);\n    }\n  }\n  static #_ = this.ɵfac = function ProductsComponent_Factory(t) {\n    return new (t || ProductsComponent)(i0.ɵɵdirectiveInject(i1.ProductsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProductsComponent,\n    selectors: [[\"app-products\"]],\n    inputs: {\n      selectId: \"selectId\"\n    },\n    outputs: {\n      orderedProduct: \"orderedProduct\",\n      countProduct: \"countProduct\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 26,\n    vars: 1,\n    consts: [[1, \"table\", \"mt-5\"], [3, \"d-none\", \"background-color\", 4, \"ngFor\", \"ngForOf\"], [\"alt\", \"\", \"width\", \"100px\", 3, \"src\"], [\"type\", \"number\", \"name\", \"quantity\", \"min\", \"1\", 3, \"max\"], [\"item\", \"\"], [1, \"btn\", \"btn-Primary\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n    template: function ProductsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Products List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"th\");\n        i0.ɵɵtext(5, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\");\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Img\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Stock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"No.items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Detail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Add to Cart\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"tbody\");\n        i0.ɵɵtemplate(21, ProductsComponent_tr_21_Template, 22, 12, \"tr\", 1);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(22, \"hr\")(23, \"hr\")(24, \"hr\")(25, \"hr\");\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.ProductOfCaegory);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.CurrencyPipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","i0","ProductsComponent","constructor","productservice","Product","getAllproducts","ngOnChanges","console","log","selectId","ProductOfCaegory","getProductBycategory","ngOnInit","buyItem","id","quantity","item","productIndex","findIndex","product","totalprice","price","orderedProduct","emit","countProduct","selectors","inputs","outputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/mahmoud/Downloads/app-start/src/app/Components/products/products.component.ts","/home/mahmoud/Downloads/app-start/src/app/Components/products/products.component.html"],"sourcesContent":["import { ProductsService } from './../../Services/products.service';\nimport { Icategory } from \"src/app/Models/icategory\";\nimport { Iproduct } from \"./../../Models/iproduct\";\nimport { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChange } from \"@angular/core\";\n\n@Component({\n  selector: \"app-products\",\n  templateUrl: \"./products.component.html\",\n  styleUrls: [\"./products.component.css\"],\n})\nexport class ProductsComponent implements OnChanges ,OnInit{\n  Product: Iproduct[];\n  ProductOfCaegory: Iproduct[] = [];\n  totalprice: number = 0;\n  @Input() selectId: number = 0;\n  @Output() orderedProduct: EventEmitter<any> = new EventEmitter<any>();\n  @Output() countProduct: EventEmitter<number> = new EventEmitter<number>();\n  // @Input() ProductOfCategory: any[] = []; // Input property to receive products of the selected category\n  constructor(private productservice:ProductsService){\n     this.Product = productservice.getAllproducts();\n\n  }\n\nngOnChanges(): void {\n    // this.FilterProductByCategory()\n    console.log(this.selectId)\n    this.ProductOfCaegory=this.productservice.getProductBycategory(this.selectId)\n\n  }\n  ngOnInit(): void {\n    this.ProductOfCaegory=this.productservice.getProductBycategory(this.selectId)\n\n  }\n  buyItem(id: number, quantity: any,item:any) {\n    const productIndex = this.Product.findIndex((product) => product.id === id);\n    if (productIndex !== -1) {\n      if (quantity > 0 && quantity <= this.Product[productIndex].quantity) {\n        // Deduct the selected quantity from the stock\n        this.Product[productIndex].quantity -= quantity;\n        this.totalprice = this.Product[productIndex].price * quantity;\n        this.orderedProduct.emit(item);\n        this.countProduct.emit(quantity)\n        console.log(\n          `Item with ID ${id} and quantity ${quantity} has been purchased.`\n        );\n      } else {\n        console.log(`Invalid quantity for item with ID ${id}.`);\n      }\n    } else {\n      console.log(`Item with ID ${id} not found.`);\n    }\n  }\n\n  // private FilterProductByCategory() {\n  //   this.ProductOfCaegory =ProductsService.getProductBycategory(this.selectId)\n\n  // //   if (this.selectId == 0) \n  // //     {\n  // //       this.ProductOfCaegory = this.Product;\n  // //       console.log('Hello 0',this.selectId)\n\n  // //     }      \n  // //   else\n  // //   {\n  // //         console.log('Error',this.selectId)\n  // //     this.ProductOfCaegory = this.Product.filter(\n  // //       (item) => (item.Category == this.selectId)\n  // //     );\n  // //   }\n  \n  // }\n\n  \n}\n","<!--  -->\n\n<!--  -->\n<h3>Products List</h3>\n<table class=\"table mt-5\">\n    <thead>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Img</th>\n        <th>Price</th>\n        <th>Stock</th>\n        <th>No.items</th>\n        <th>Detail</th>\n        <th>Add to Cart</th>\n    </thead>\n    <tbody >\n                <tr *ngFor=\"let prod of ProductOfCaegory let i = index\"\n                 [class.d-none]=\"prod?.quantity == 0\"\n                 [style.background-color]=\"(prod.quantity == 1) ? 'yellow' : 'white'\">\n            <td>{{i+1}}</td>\n            <td>{{prod?.name}}</td>\n            <td><img [src]=\"prod?.imgURL\" alt=\"\" width=\"100px\"></td>\n            <td>{{prod?.price | currency}}</td>\n            <td>{{prod?.quantity}}</td>\n            <td>\n                <div>\n                    <input type=\"number\" #item  name=\"quantity\"  min=\"1\" max=\"{{prod?.quantity}}\">\n                </div>\n            </td>\n            <td><button class=\"btn btn-Primary\">Detail</button></td>\n            <td><button class=\"btn btn-success\" (click)=\"buyItem(prod.id,item.value,prod)\">Add to Card</button></td>\n        </tr>\n\n    </tbody>\n</table>\n<hr>\n<!-- <h3>\n    Total Price : {{totalprice}}\n</h3> -->\n<hr>\n<hr>\n<hr>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}