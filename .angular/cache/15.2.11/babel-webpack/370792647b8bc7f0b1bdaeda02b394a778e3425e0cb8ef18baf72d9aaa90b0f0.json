{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class UserauthService {\n  constructor() {\n    this.loginsubject = new BehaviorSubject(false);\n  }\n  login(username, password) {\n    let token = username + password;\n    localStorage.setItem('token', token);\n  }\n  logout() {\n    localStorage.removeItem('token');\n  }\n  get Islogin() {\n    return localStorage.getItem('token') ? true : false;\n  }\n  static #_ = this.ɵfac = function UserauthService_Factory(t) {\n    return new (t || UserauthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserauthService,\n    factory: UserauthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,eAAe;EAE1BC;IACE,IAAI,CAACC,YAAY,GAAG,IAAIH,eAAe,CAAU,KAAK,CAAC;EACzD;EAEAI,KAAK,CAACC,QAAe,EAACC,QAAe;IACnC,IAAIC,KAAK,GAAGF,QAAQ,GAACC,QAAQ;IAC7BE,YAAY,CAACC,OAAO,CAAC,OAAO,EAACF,KAAK,CAAC;EACrC;EACAG,MAAM;IACHF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;EACnC;EACA,IAAIC,OAAO;IAGT,OAAOJ,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,KAAK;EAErD;EAAC;qBAlBUZ,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAa,SAAfb,eAAe;IAAAc,YAFd;EAAM","names":["BehaviorSubject","UserauthService","constructor","loginsubject","login","username","password","token","localStorage","setItem","logout","removeItem","Islogin","getItem","factory","providedIn"],"sourceRoot":"","sources":["/home/mahmoud/Downloads/app-start/src/app/Services/userauth.service.ts"],"sourcesContent":["import { ReturnStatement } from '@angular/compiler';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserauthService {\n  loginsubject: BehaviorSubject<boolean>\n  constructor() { \n    this.loginsubject = new BehaviorSubject<boolean>(false)\n  }\n\n  login(username:string,password:string){\n    let token = username+password\n    localStorage.setItem('token',token);\n  }\n  logout(){\n     localStorage.removeItem('token')\n  }\n  get Islogin():boolean\n  {\n \n    return localStorage.getItem('token') ? true : false;\n \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}