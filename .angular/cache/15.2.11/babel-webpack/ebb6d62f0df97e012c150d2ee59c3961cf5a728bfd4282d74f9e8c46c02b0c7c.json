{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/orders.service\";\nimport * as i2 from \"@angular/common\";\nfunction OrdersListComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelement(6, \"img\", 2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"div\");\n    i0.ɵɵelement(14, \"input\", 3, 4);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const prod_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵstyleProp(\"background-color\", prod_r1.quantity == 1 ? \"yellow\" : \"white\");\n    i0.ɵɵclassProp(\"d-none\", (prod_r1 == null ? null : prod_r1.quantity) == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(prod_r1 == null ? null : prod_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", prod_r1 == null ? null : prod_r1.imgURL, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 10, prod_r1 == null ? null : prod_r1.price));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(prod_r1 == null ? null : prod_r1.quantity);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"max\", prod_r1 == null ? null : prod_r1.quantity);\n  }\n}\nexport class OrdersListComponent {\n  constructor(apiorder) {\n    this.apiorder = apiorder;\n  }\n  ngOnInit() {\n    let User = localStorage.getItem('user');\n    if (User) {\n      let user_id = JSON.parse(User);\n      console.log(user_id);\n      this.apiorder.getordersbyuserid(user_id).subscribe(prod => {\n        this.orders = prod;\n      });\n    }\n  }\n  ngOnChanges() {}\n  calculateTotalPrice() {\n    // Add logic to calculate the total price of selected items\n    // You can iterate over the selectedItems array and sum up the prices\n    return 0; // Return the total price\n  }\n\n  purchaseItems() {\n    // Add logic to handle the purchase action\n    // This can involve submitting the selectedItems array to a backend service or performing any other necessary actions\n  }\n  addToCart(product, quantity) {\n    // Add logic to add the selected product to the cart with the specified quantity\n    // You can push the product and its quantity to the selectedItems array\n  }\n  static #_ = this.ɵfac = function OrdersListComponent_Factory(t) {\n    return new (t || OrdersListComponent)(i0.ɵɵdirectiveInject(i1.OrdersService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrdersListComponent,\n    selectors: [[\"app-orders-list\"]],\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 20,\n    vars: 1,\n    consts: [[1, \"table\", \"mt-5\"], [3, \"d-none\", \"background-color\", 4, \"ngFor\", \"ngForOf\"], [\"alt\", \"\", \"width\", \"100px\", 3, \"src\"], [\"type\", \"number\", \"name\", \"quantity\", \"min\", \"1\", 3, \"max\"], [\"item\", \"\"]],\n    template: function OrdersListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0)(1, \"thead\")(2, \"th\");\n        i0.ɵɵtext(3, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"th\");\n        i0.ɵɵtext(5, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\");\n        i0.ɵɵtext(7, \"Img\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Stock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"No.items\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Detail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Add to Cart\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"tbody\");\n        i0.ɵɵtemplate(19, OrdersListComponent_tr_19_Template, 16, 12, \"tr\", 1);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.orders);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.CurrencyPipe],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;IAaQA,0BAE8E;IACtEA,YAAO;IAAAA,iBAAK;IAChBA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,yBAA+C;IAAAA,iBAAK;IACxDA,0BAAI;IAAAA,YAA0B;;IAAAA,iBAAK;IACnCA,2BAAI;IAAAA,aAAkB;IAAAA,iBAAK;IAC3BA,2BAAI;IAEIA,+BAA8E;IAClFA,iBAAM;;;;;IATLA,8EAAoE;IADpEA,0EAAoC;IAErCA,eAAO;IAAPA,8BAAO;IACPA,eAAc;IAAdA,2DAAc;IACTA,eAAoB;IAApBA,+EAAoB;IACzBA,eAA0B;IAA1BA,mFAA0B;IAC1BA,eAAkB;IAAlBA,+DAAkB;IAGuCA,eAAwB;IAAxBA,0EAAwB;;;ACdjG,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,QAAsB;IAAtB,aAAQ,GAARA,QAAQ;EAE5B;EACAC,QAAQ;IACN,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACvC,IAAGF,IAAI,EAAC;MACT,IAAIG,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC;MAC5BM,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC;MACnB,IAAI,CAACL,QAAQ,CAACU,iBAAiB,CAACL,OAAO,CAAC,CAACM,SAAS,CAAEC,IAAI,IAAG;QAC3D,IAAI,CAACC,MAAM,GAAGD,IAAI;MACtB,CAAC,CAAC;;EAIF;EACAE,WAAW,IAEX;EACAC,mBAAmB;IACjB;IACA;IACA,OAAO,CAAC,CAAC,CAAC;EACZ;;EAEAC,aAAa;IACX;IACA;EAAA;EAEFC,SAAS,CAACC,OAAgB,EAAEC,QAAgB;IAC1C;IACA;EAAA;EACD;qBAjCUrB,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAsB;IAAAC;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDRhC5B,gCAA0B;QAEdA,kBAAE;QAAAA,iBAAK;QACXA,0BAAI;QAAAA,oBAAI;QAAAA,iBAAK;QACbA,0BAAI;QAAAA,mBAAG;QAAAA,iBAAK;QACZA,0BAAI;QAAAA,qBAAK;QAAAA,iBAAK;QACdA,2BAAI;QAAAA,sBAAK;QAAAA,iBAAK;QACdA,2BAAI;QAAAA,yBAAQ;QAAAA,iBAAK;QACjBA,2BAAI;QAAAA,uBAAM;QAAAA,iBAAK;QACfA,2BAAI;QAAAA,4BAAW;QAAAA,iBAAK;QAExBA,8BAAQ;QACJA,sEAaH;QACDA,iBAAQ;;;QAdiBA,gBAAU;QAAVA,oCAAU","names":["i0","OrdersListComponent","constructor","apiorder","ngOnInit","User","localStorage","getItem","user_id","JSON","parse","console","log","getordersbyuserid","subscribe","prod","orders","ngOnChanges","calculateTotalPrice","purchaseItems","addToCart","product","quantity","selectors","features","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/mahmoud/Downloads/app-start/src/app/Components/orders-list/orders-list.component.html","/home/mahmoud/Downloads/app-start/src/app/Components/orders-list/orders-list.component.ts"],"sourcesContent":["<!-- <h3>Orders List</h3> -->\n<table class=\"table mt-5\">\n    <thead>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Img</th>\n        <th>Price</th>\n        <th>Stock</th>\n        <th>No.items</th>\n        <th>Detail</th>\n        <th>Add to Cart</th>\n    </thead>\n    <tbody >\n        <tr *ngFor=\"let prod of orders let i = index\"\n                 [class.d-none]=\"prod?.quantity == 0\"\n                 [style.background-color]=\"(prod.quantity == 1) ? 'yellow' : 'white'\">\n            <td>{{i+1}}</td>\n            <td>{{prod?.name}}</td>\n            <td><img [src]=\"prod?.imgURL\" alt=\"\" width=\"100px\"></td>\n            <td>{{prod?.price | currency}}</td>\n            <td>{{prod?.quantity}}</td>\n            <td>\n                <div>\n                    <input type=\"number\" #item  name=\"quantity\"  min=\"1\" max=\"{{prod?.quantity}}\">\n                </div>\n            </td>\n</tr>\n    </tbody>\n</table>\n","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { Iorders } from 'src/app/Models/iorders';\nimport { OrdersService } from 'src/app/Services/orders.service';\n\n@Component({\n  selector: 'app-orders-list',\n  templateUrl: './orders-list.component.html',\n  styleUrls: ['./orders-list.component.css']\n})\nexport class OrdersListComponent implements OnInit ,OnChanges {\n  orders:Iorders[] | any\n  constructor(private apiorder:OrdersService){\n\n  }\n  ngOnInit(): void {\n    let User = localStorage.getItem('user')\n    if(User){\n   let user_id = JSON.parse(User) \n     console.log(user_id)\n      this.apiorder.getordersbyuserid(user_id).subscribe((prod)=>{\n      this.orders = prod\n  })\n    }\n    \n \n  }\n  ngOnChanges(): void {\n\n  }\n  calculateTotalPrice(): number {\n    // Add logic to calculate the total price of selected items\n    // You can iterate over the selectedItems array and sum up the prices\n    return 0; // Return the total price\n  }\n\n  purchaseItems(): void {\n    // Add logic to handle the purchase action\n    // This can involve submitting the selectedItems array to a backend service or performing any other necessary actions\n  }\n  addToCart(product: Product, quantity: number): void {\n    // Add logic to add the selected product to the cart with the specified quantity\n    // You can push the product and its quantity to the selectedItems array\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}